import React, { Component } from 'react';
import { 
	Table, 
	Card, 
	ListGroup, 
	ListGroupItem, 
	Button, 
	Form, 
	FormGroup,  
	FormControl
} from 'react-bootstrap';

import { v1 as uuid } from 'uuid';  // Pour generer des ID pour nos attributs

class ModeleBuilderItem extends Component {
  constructor(props) {
    super(props);
    this.state = {
      fieldInput: '',
      typeInput: '',
    };

    this.handleFieldInputChange = this.handleFieldInputChange.bind(this);
    this.handleTypeInputChange = this.handleTypeInputChange.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleFieldInputChange(event) {
    this.setState({ fieldInput: event.target.value });
  }
  handleTypeInputChange(event) {
    this.setState({ typeInput: event.target.value });
  }

  handleSubmit(event) {
    // alert('Propriete ajoutee: ' + this.state.fieldInput + ' : ' + this.state.typeInput);
    // Ajouter le nouveau champs
    this.setState({
      fields: [
        ...this.state.fields,
        {
          id: uuid(),
          field: this.state.fieldInput,
          type: this.state.typeInput,
        },
      ],
    });
    event.preventDefault();
  }

  render() {
    const id = this.props.id;
    const title = this.props.title;
    const { fields } = this.state;
    return (
      <div className="mt-3">
        <Card className="bg-light">
          <Table>
            <thead>
              <tr>
                <td>
                  <b>Title</b>
                </td>
                <td>{title}</td>
              </tr>
              <br />
            </thead>
            <thead className="mt-2">
              <tr>
                <th>Field</th>
                <th>Type</th>
              </tr>
            </thead>
            <tbody>
              {fields.map(({ id, field, type }) => (
                <tr key={id}>
                  <td>{field}</td>
                  <td>{type}</td>
                </tr>
              ))}
            </tbody>
          </Table>
          <Form onSubmit={this.handleSubmit} inline>
            <FormGroup className="mb-2 p-1">
              <FormControl
                onChange={this.handleFieldInputChange}
                className="form-control form-control-sm"
                type="text"
                name="Field"
                placeholder="Field"
              />
            </FormGroup>
            <FormGroup className="mb-2">
              <FormControl
                onChange={this.handleTypeInputChange}
                className="form-control form-control-sm"
                type="select"
                name="select"
                id="exampleSelect"
              >
                <option>______</option>
                <option>String</option>
                <option>Number</option>
                <option>Boolean</option>
                <option>Autre</option>
              </FormControl>
              <Button type="submit" outline color="info" size="sm">
                +
              </Button>
            </FormGroup>
          </Form>
        </Card>
      </div>
    );
  }
}

export default ModeleBuilderItem;	